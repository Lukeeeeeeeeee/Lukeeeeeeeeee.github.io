<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端搬运工</title>
  
  <subtitle>一个没有感情的前端搬运工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-03T08:42:31.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>SamoZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub加载过慢或图片加载失败</title>
    <link href="http://yoursite.com/2020/06/03/Github%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/06/03/Github%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-06-03T08:42:31.000Z</published>
    <updated>2020-06-03T08:42:31.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;通过 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuaXBhZGRyZXNzLmNvbS8=&quot; title=&quot;https://www.ipaddress.com/&quot;&gt;ip地址查询&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; 查看 GitHub 的 ip。&lt;/p&gt;
&lt;h3 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h3&gt;&lt;p&gt;在 Mac 下执行 &lt;code&gt;sudo vim /etc/hosts&lt;/code&gt; 命令修改 hosts 文件。随便按一个键，进入 INSERT 模式，在最后一行添加如下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# GitHub Start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140.82.114.4      github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140.82.114.20     gist.github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140.82.113.4      gist.github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    assets-cdn.github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    raw.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    gist.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    cloud.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    camo.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars0.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars0.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.28.133     avatars1.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars1.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars2.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.28.133     avatars2.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars3.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars3.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars4.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars4.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars5.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars5.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars6.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars6.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars7.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars7.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151.101.184.133    avatars8.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199.232.68.133     avatars8.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# GitHub End&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-函数</title>
    <link href="http://yoursite.com/2020/06/02/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2020/06/02/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%87%BD%E6%95%B0/</id>
    <published>2020-06-02T14:23:07.000Z</published>
    <updated>2020-06-02T14:23:07.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;函数声明&quot;&gt;&lt;a href=&quot;#函数声明&quot; class=&quot;headerlink&quot; title=&quot;函数声明&quot;&gt;&lt;/a&gt;函数声明&lt;/h3&gt;&lt;p&gt;当使用函数声明语句时，函数名称和函数体都被提升到顶部：所以可以在一个函数声明之前调用它。&lt;br&gt;但使用函数表达式则不可以：因为以表达式定义的函数，其变量的声明提前了，但是函数体没有被提前。&lt;/p&gt;
&lt;h3 id=&quot;方法链&quot;&gt;&lt;a href=&quot;#方法链&quot; class=&quot;headerlink&quot; title=&quot;方法链&quot;&gt;&lt;/a&gt;方法链&lt;/h3&gt;&lt;p&gt;在 jQuery 中，我们竟然见到链式调用的方式，其原理就是当方法不需要返回值时，直接返回 this。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-数组</title>
    <link href="http://yoursite.com/2020/06/01/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2020/06/01/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E6%95%B0%E7%BB%84/</id>
    <published>2020-06-01T14:09:13.000Z</published>
    <updated>2020-06-01T14:09:13.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;数组方法&quot;&gt;&lt;a href=&quot;#数组方法&quot; class=&quot;headerlink&quot; title=&quot;数组方法&quot;&gt;&lt;/a&gt;数组方法&lt;/h3&gt;&lt;p&gt;这里不对每个方法进行讲解。&lt;/p&gt;
&lt;p&gt;join() 方法可以将数组所有的元素转化为字符串并拼接在一起，返回最后生成的字符串。&lt;/p&gt;
&lt;p&gt;reverse() 方法可以将数组颠倒顺序，返回逆向的数组。注意：它会改变原数组。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-对象</title>
    <link href="http://yoursite.com/2020/05/24/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2020/05/24/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-05-24T14:28:45.000Z</published>
    <updated>2020-05-24T14:28:45.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;原型&quot;&gt;&lt;a href=&quot;#原型&quot; class=&quot;headerlink&quot; title=&quot;原型&quot;&gt;&lt;/a&gt;原型&lt;/h3&gt;&lt;p&gt;每一个 JavaScript 对象(除了 null)都和另一个对象相关联。“另一个”对象就是我们所熟知的原型，每一个对象都从原型继承属性。&lt;/p&gt;
&lt;p&gt;所有通过对象直接量创建的对象都具有同一个原型对象，并且可以通过 JavaScript 代码 Object.prototype 获取对原型对象的引用。&lt;br&gt;通过 new 和构造函数调用创建的对象的原型就是构造函数的 prototype 属性的值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newObj = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newObj.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.prototype &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; newArr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newArr.__proto__ === &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-关系表达式</title>
    <link href="http://yoursite.com/2020/05/24/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%85%B3%E7%B3%BB%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/05/24/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E5%85%B3%E7%B3%BB%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-05-24T07:03:10.000Z</published>
    <updated>2020-05-24T07:03:10.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这里不具体介绍所有的，主要介绍下 instanceof 运算符的运行原理。&lt;/p&gt;
&lt;p&gt;关系表达式有：==、 ===、 !=、 !==、 &amp;lt;、 &amp;gt;、 &amp;lt;=、 &amp;gt;=、 in、 instanceof&lt;/p&gt;
&lt;h3 id=&quot;in-运算发&quot;&gt;&lt;a href=&quot;#in-运算发&quot; class=&quot;headerlink&quot; title=&quot;in 运算发&quot;&gt;&lt;/a&gt;in 运算发&lt;/h3&gt;&lt;p&gt;其中 in 运算符是用来检测对象中是否存在某个属性&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-作用域</title>
    <link href="http://yoursite.com/2020/05/22/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2020/05/22/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2020-05-22T14:15:09.000Z</published>
    <updated>2020-05-22T14:15:09.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;变量作用域和函数作用域&quot;&gt;&lt;a href=&quot;#变量作用域和函数作用域&quot; class=&quot;headerlink&quot; title=&quot;变量作用域和函数作用域&quot;&gt;&lt;/a&gt;变量作用域和函数作用域&lt;/h3&gt;&lt;p&gt;全局变量的作用域就是全局，无论在哪里都可以使用。&lt;/p&gt;
&lt;p&gt;函数内声明的变量，其作用域只在函数内(包括内嵌函数)可以使用。&lt;br&gt;别忘了，函数的参数，其作用域也是函数内部。&lt;br&gt;在函数内部，局部变量优先级高于同名的全局变量。如果一个函数的内部声明了一个局部变量或者函数带有的参数和全局变量同名，那么全局变量就会被局部变量或者参数覆盖。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scope = &lt;span class=&quot;string&quot;&gt;&#39;global&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkoutscope&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scope = &lt;span class=&quot;string&quot;&gt;&#39;local&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; scope;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkoutscope(); &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; &#39;local&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-类型转换</title>
    <link href="http://yoursite.com/2020/05/21/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yoursite.com/2020/05/21/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</id>
    <published>2020-05-21T14:58:48.000Z</published>
    <updated>2020-05-21T14:58:48.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;类型转换表&quot;&gt;&lt;a href=&quot;#类型转换表&quot; class=&quot;headerlink&quot; title=&quot;类型转换表&quot;&gt;&lt;/a&gt;类型转换表&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;转换为：字符串&lt;/th&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;布尔值&lt;/th&gt;
&lt;th&gt;对象&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;td&gt;‘undefined’&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;throws TypeError&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;td&gt;‘null’&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;throws TypeError&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;‘true’&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;new Boolean(true)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;‘false’&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;new Boolean(false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘’(空字符串)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;new String(‘’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘1.2’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;new Number(1.2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘one’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;new String(‘one’)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;‘0’&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;new Number(0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-0&lt;/td&gt;
&lt;td&gt;‘0’&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;new Number(-0)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;‘NaN’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;false&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;new Number(NaN)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infinity&lt;/td&gt;
&lt;td&gt;‘Infinity’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;new Number(Infinity)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Infinity&lt;/td&gt;
&lt;td&gt;‘-Infinity’&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;new Nubmer(-Infinity)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1(无穷大, 非零)&lt;/td&gt;
&lt;td&gt;‘1’&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;new Nubmer(1)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{} (任意对象)&lt;/td&gt;
&lt;td&gt;注 1&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;注 2&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[] (任意数组)&lt;/td&gt;
&lt;td&gt;‘’&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[9] (1个数字元素)&lt;/td&gt;
&lt;td&gt;‘9’&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[‘a’] (其他数组)&lt;/td&gt;
&lt;td&gt;注 3&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;function(){}(任意函数)&lt;/td&gt;
&lt;td&gt;注 4&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;div id=&quot;footnotes&quot;&gt;&lt;hr&gt;&lt;div id=&quot;footnotelist&quot;&gt;&lt;ol style=&quot;list-style:none; padding-left: 0;&quot;&gt;&lt;li id=&quot;fn:1&quot;&gt;&lt;span style=&quot;display: inline-block; vertical-align: top; padding-right: 10px;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;display: inline-block; vertical-align: top;&quot;&gt;会先调用 toString()，如果没有，则调用 valueOf()，都没有则抛出类型错误异常&lt;/span&gt;&lt;a href=&quot;#fnref:1&quot; rev=&quot;footnote&quot;&gt; ↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;fn:2&quot;&gt;&lt;span style=&quot;display: inline-block; vertical-align: top; padding-right: 10px;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;display: inline-block; vertical-align: top;&quot;&gt;会先调用 valueOf()，如果没有，则调用 toString()，都没有则抛出类型错误异常&lt;/span&gt;&lt;a href=&quot;#fnref:2&quot; rev=&quot;footnote&quot;&gt; ↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;fn:3&quot;&gt;&lt;span style=&quot;display: inline-block; vertical-align: top; padding-right: 10px;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;display: inline-block; vertical-align: top;&quot;&gt;调用 join()，如[&#39;a&#39;] =&amp;gt; &#39;a&#39;, [1,2,3] =&amp;gt; &#39;1,2,3&#39;&lt;/span&gt;&lt;a href=&quot;#fnref:3&quot; rev=&quot;footnote&quot;&gt; ↩&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;fn:4&quot;&gt;&lt;span style=&quot;display: inline-block; vertical-align: top; padding-right: 10px;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;display: inline-block; vertical-align: top;&quot;&gt;调用 toString()&lt;/span&gt;&lt;a href=&quot;#fnref:4&quot; rev=&quot;footnote&quot;&gt; ↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础学习-不可变的原始值和可变的对象引用</title>
    <link href="http://yoursite.com/2020/05/21/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E5%8E%9F%E5%A7%8B%E5%80%BC%E5%92%8C%E5%8F%AF%E5%8F%98%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8/"/>
    <id>http://yoursite.com/2020/05/21/JavaScript%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0-%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E5%8E%9F%E5%A7%8B%E5%80%BC%E5%92%8C%E5%8F%AF%E5%8F%98%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8/</id>
    <published>2020-05-21T14:34:18.000Z</published>
    <updated>2020-05-21T14:34:18.000Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;JavaScript的原始值和对象-基本类型和引用类型&quot;&gt;&lt;a href=&quot;#JavaScript的原始值和对象-基本类型和引用类型&quot; class=&quot;headerlink&quot; title=&quot;JavaScript的原始值和对象(基本类型和引用类型)&quot;&gt;&lt;/a&gt;JavaScript的原始值和对象(基本类型和引用类型)&lt;/h3&gt;&lt;p&gt;JavaScript的基础类型(原始值)：undefined、null、string、number、boolean、symbol&lt;/p&gt;
&lt;h4 id=&quot;原始值和对象区别：&quot;&gt;&lt;a href=&quot;#原始值和对象区别：&quot; class=&quot;headerlink&quot; title=&quot;原始值和对象区别：&quot;&gt;&lt;/a&gt;原始值和对象区别：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;原始值是不可改变的，任何方法都不可改变一个原始值。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>动漫日记</title>
    <link href="http://yoursite.com/2020/04/11/%E5%8A%A8%E6%BC%AB%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/04/11/%E5%8A%A8%E6%BC%AB%E6%97%A5%E8%AE%B0/</id>
    <published>2020-04-10T23:53:19.000Z</published>
    <updated>2020-04-10T23:53:19.000Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;身边没有喜欢动漫的通道人，每次分享都会被说：“小孩子看的东西”。所以才有了想要写此文章的目的，每看完一部都会更新，也是保持写博客的习惯。&lt;/p&gt;
&lt;p&gt;我喜欢看爱情，校园番，以下有强烈推荐看的番剧，一定要看哦，甜甜爱情在这个物质生活、快节奏生活里给自己一点点努力下去的动力，吃饱饱的狗粮才能笑看身边的物质爱情，因为“爱情”从来都是甜的让人羡慕！ &lt;/p&gt;
&lt;h4 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="动漫" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>原生JavaScript实现拖放效果</title>
    <link href="http://yoursite.com/2020/04/07/%E5%8E%9F%E7%94%9FJavaScript%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%94%BE%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2020/04/07/%E5%8E%9F%E7%94%9FJavaScript%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%94%BE%E6%95%88%E6%9E%9C/</id>
    <published>2020-04-07T13:49:43.000Z</published>
    <updated>2020-04-07T13:49:43.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;一个简单的拖放效果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://pic.downk.cc/item/5e8c8667504f4bcb043ffa0c.png&quot; alt&gt;&lt;/p&gt;
&lt;h4 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h4&gt;&lt;h5 id=&quot;HTML-很简单&quot;&gt;&lt;a href=&quot;#HTML-很简单&quot; class=&quot;headerlink&quot; title=&quot;HTML 很简单&quot;&gt;&lt;/a&gt;HTML 很简单&lt;/h5&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Cookie 和 SameSite 属性</title>
    <link href="http://yoursite.com/2020/04/02/Cookie-%E5%92%8C-SameSite-%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2020/04/02/Cookie-%E5%92%8C-SameSite-%E5%B1%9E%E6%80%A7/</id>
    <published>2020-04-02T06:16:29.000Z</published>
    <updated>2020-04-02T06:16:29.000Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP&quot;&gt;&lt;/a&gt;HTTP&lt;/h4&gt;&lt;p&gt;一般我们都会说“HTTP 是一个无状态的协议”，不过要注意这里的 HTTP 其实是指 HTTP 1.x，而所谓无状态协议，简单的理解就是即使同一个客户端连续两次发送请求给服务器，服务器也识别不出这是同一个客户端发送的请求，这导致的问题就比如你加入了一个商品到购物车中，但是因为识别不出时同一个客户端，刷新一下页面就没有了…&lt;/p&gt;
&lt;h4 id=&quot;Cookie&quot;&gt;&lt;a href=&quot;#Cookie&quot; class=&quot;headerlink&quot; title=&quot;Cookie&quot;&gt;&lt;/a&gt;Cookie&lt;/h4&gt;&lt;p&gt;为了解决 HTTP 无状态导致的问题，后来出现了 Cookie。不过这样说可能会让你产生一些误解，首先无状态并不是不好，有优点，但也会导致一些问题。而 Cookie 的存在也不是为了解决通讯协议无状态的问题，只是为了解决客户端与服务器会话状态的问题，这个状态是指后端服务的状态而非通讯协议的状态。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="浏览器" scheme="http://yoursite.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于JavaScript的变量提升</title>
    <link href="http://yoursite.com/2020/03/30/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/"/>
    <id>http://yoursite.com/2020/03/30/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</id>
    <published>2020-03-30T14:20:29.000Z</published>
    <updated>2020-03-30T14:20:29.000Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var v &amp;#x3D; &amp;#39;hello world&amp;#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(v);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;弹出 Hello World&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var v &amp;#x3D; &amp;#39;hello world&amp;#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var v &amp;#x3D; &amp;#39;I love you&amp;#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也是弹出 hello world&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>关于JavaScript的函数声明和函数表达式</title>
    <link href="http://yoursite.com/2020/03/30/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E5%92%8C%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/03/30/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E5%92%8C%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-03-30T14:03:15.000Z</published>
    <updated>2020-03-30T14:03:15.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript定义函数有两种类型&lt;/p&gt;
&lt;h4 id=&quot;函数声明&quot;&gt;&lt;a href=&quot;#函数声明&quot; class=&quot;headerlink&quot; title=&quot;函数声明&quot;&gt;&lt;/a&gt;函数声明&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function wscat(type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;函数表达式&quot;&gt;&lt;a href=&quot;#函数表达式&quot; class=&quot;headerlink&quot; title=&quot;函数表达式&quot;&gt;&lt;/a&gt;函数表达式&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一道关于JavaScript综合面试题</title>
    <link href="http://yoursite.com/2020/03/30/%E4%B8%80%E9%81%93%E5%85%B3%E4%BA%8EJavaScript%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2020/03/30/%E4%B8%80%E9%81%93%E5%85%B3%E4%BA%8EJavaScript%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2020-03-30T12:29:04.000Z</published>
    <updated>2020-03-30T12:29:04.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;以下是我之前确实面试过的一道题，当时答的很不好，事后也想不起来了，正好前两天看到一个公众号发出来了，把思路也给捋清楚了，就记录到这里了。&lt;/p&gt;
&lt;h4 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Foo() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getName &amp;#x3D; function() &amp;#123; alert(1); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return this;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Foo.getName &amp;#x3D; function() &amp;#123; alert(2); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Foo.prototype.getName &amp;#x3D; function() &amp;#123; alert(3); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var getName &amp;#x3D; function() &amp;#123; alert(4); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function getName() &amp;#123; alert(5); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x2F;&amp;#x2F; 请写出一下输出结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Foo.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Foo().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new Foo.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new Foo().getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new new Foo().getName();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;Foo-getName&quot;&gt;&lt;a href=&quot;#Foo-getName&quot; class=&quot;headerlink&quot; title=&quot;Foo.getName();&quot;&gt;&lt;/a&gt;Foo.getName();&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="面试题汇总" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>手动实现Promise</title>
    <link href="http://yoursite.com/2020/03/30/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0Promise/"/>
    <id>http://yoursite.com/2020/03/30/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0Promise/</id>
    <published>2020-03-30T12:23:01.000Z</published>
    <updated>2020-03-30T12:23:01.000Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Promise-A-规范&quot;&gt;&lt;a href=&quot;#Promise-A-规范&quot; class=&quot;headerlink&quot; title=&quot;Promise/A+ 规范&quot;&gt;&lt;/a&gt;Promise/A+ 规范&lt;/h4&gt;&lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL21hbGNvbG15dS5naXRodWIuaW8vbWFsbm90ZS8yMDE1LzA2LzEyL1Byb21pc2VzLUEtUGx1cy8=&quot; title=&quot;http://malcolmyu.github.io/malnote/2015/06/12/Promises-A-Plus/&quot;&gt;Promise/A+ 规范&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;Promise-声明&quot;&gt;&lt;a href=&quot;#Promise-声明&quot; class=&quot;headerlink&quot; title=&quot;Promise 声明&quot;&gt;&lt;/a&gt;Promise 声明&lt;/h4&gt;&lt;p&gt;首先，Promise 肯定是一个类，我们用 class 来声明。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Promise" scheme="http://yoursite.com/tags/Promise/"/>
    
  </entry>
  
</feed>
